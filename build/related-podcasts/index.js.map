{"version":3,"file":"related-podcasts/index.js","mappings":"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","sources":["webpack://pioneerblocks/./src/related-podcasts/edit.js","webpack://pioneerblocks/./src/related-podcasts/editor.scss?eae0","webpack://pioneerblocks/./src/related-podcasts/index.js","webpack://pioneerblocks/./src/related-podcasts/save.js","webpack://pioneerblocks/./src/related-podcasts/style.scss?6661","webpack://pioneerblocks/external window [\"wp\",\"blockEditor\"]","webpack://pioneerblocks/external window [\"wp\",\"blocks\"]","webpack://pioneerblocks/external window [\"wp\",\"components\"]","webpack://pioneerblocks/external window [\"wp\",\"data\"]","webpack://pioneerblocks/external window [\"wp\",\"i18n\"]","webpack://pioneerblocks/external window \"ReactJSXRuntime\"","webpack://pioneerblocks/webpack/bootstrap","webpack://pioneerblocks/webpack/runtime/chunk loaded","webpack://pioneerblocks/webpack/runtime/compat get default export","webpack://pioneerblocks/webpack/runtime/define property getters","webpack://pioneerblocks/webpack/runtime/hasOwnProperty shorthand","webpack://pioneerblocks/webpack/runtime/make namespace object","webpack://pioneerblocks/webpack/runtime/jsonp chunk loading","webpack://pioneerblocks/webpack/before-startup","webpack://pioneerblocks/webpack/startup","webpack://pioneerblocks/webpack/after-startup"],"sourcesContent":["import { useBlockProps, InspectorControls } from '@wordpress/block-editor';\r\nimport { PanelBody, SelectControl, Button, TextControl } from '@wordpress/components';\r\nimport { useSelect } from '@wordpress/data';\r\nimport { __ } from '@wordpress/i18n';\r\nimport './editor.scss';\r\n\r\nexport default function Edit({ attributes, setAttributes }) {\r\n    const { title, description, selectedEpisodes } = attributes;\r\n\r\n\tconst encodeId = (id) => btoa(`post:${id}`);\r\n    // Fetch episodes that belong to any podcast taxonomy\r\n    const episodeOptions = useSelect(select => {\r\n        const episodes = select('core').getEntityRecords('postType', 'episode', { per_page: -1 }) || [];\r\n\t\tconsole.log(episodes)\r\n        return episodes\r\n            .filter(episode => episode.podcast && episode.podcast.length > 0) // Ensure episode has at least one podcast taxonomy term\r\n            .map(episode => ({ label: episode.title.rendered, value: encodeId(episode.id) }));\r\n    }, []);\r\n\r\n    const addEpisode = (episodeId) => {\r\n\t\tconsole.log(episodeId)\r\n\t\tif (!selectedEpisodes.includes(episodeId)) {\r\n\t\t\tsetAttributes({ selectedEpisodes: [...selectedEpisodes, episodeId] });\r\n\t\t}\r\n\t};\r\n\r\n\r\n    const removeEpisode = (episodeId) => {\r\n        setAttributes({ selectedEpisodes: selectedEpisodes.filter(id => id !== episodeId) });\r\n    };\r\n\r\n    return (\r\n        <div {...useBlockProps({ className: 'episodes-list' })}>\r\n            <InspectorControls>\r\n                <PanelBody title={__('Select Episodes', 'episodes-list')} initialOpen={true}>\r\n                    <TextControl\r\n                        label={__('Title', 'episodes-list')}\r\n                        value={title || ''}\r\n                        onChange={newTitle => setAttributes({ title: newTitle })}\r\n                    />\r\n                    <TextControl\r\n                        label={__('description', 'episodes-list')}\r\n                        value={description || ''}\r\n                        onChange={newDescription => setAttributes({ description: newDescription })}\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Add Episode', 'episodes-list')}\r\n                        options={[{ label: __('Select an Episode', 'episodes-list'), value: '' }, ...episodeOptions]}\r\n                        onChange={(value) => value && addEpisode(value)}\r\n                    />\r\n                </PanelBody>\r\n            </InspectorControls>\r\n\r\n            <h2>{__('Selected Episodes', 'episodes-list')}</h2>\r\n            <ul>\r\n                {selectedEpisodes.map((episodeId) => {\r\n                    const episode = episodeOptions.find(episode => episode.value === episodeId);\r\n                    return (\r\n                        <li key={episodeId}>\r\n                            {episode?.label || __('Unknown Episode', 'episodes-list')}\r\n                            <Button isDestructive onClick={() => removeEpisode(episodeId)}>Remove</Button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};","/**\r\n * Registers a new block provided a unique name and an object defining its behavior.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\r\n */\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\n/**\r\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\r\n * All files containing `style` keyword are bundled together. The code used\r\n * gets applied both to the front of your site and to the editor.\r\n *\r\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\r\n */\r\nimport './style.scss';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport Edit from './edit';\r\nimport save from './save';\r\nimport metadata from './block.json';\r\n\r\n/**\r\n * Every block starts by registering a new block type definition.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\r\n */\r\nregisterBlockType( metadata.name, {\r\n\tattributes: {\r\n\t\ttitle: {\r\n\t\t\ttype: 'string',\r\n\t\t\tdefault: '',\r\n\t\t},\r\n\t\tdescription: {\r\n\t\t\ttype: 'string',\r\n\t\t\tdefault: '',\r\n\t\t},\r\n\t\tselectedEpisodes: {\t\r\n\t\t\ttype: 'array',\r\n\t\t\tdefault: [],\r\n\t\t},\r\n\t},\r\n\t/**\r\n\t * @see ./edit.js\r\n\t */\r\n\tedit: Edit,\r\n\r\n\t/**\r\n\t * @see ./save.js\r\n\t */\r\n\tsave,\r\n} );\r\n","/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @return {Element} Element to render.\n */\nexport default function save() {\n\treturn (\n\t\t<p { ...useBlockProps.save() }>\n\t\t\t{ 'Latest News – hello from the saved content!' }\n\t\t</p>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"related-podcasts/index\": 0,\n\t\"related-podcasts/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkpioneerblocks\"] = globalThis[\"webpackChunkpioneerblocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"related-podcasts/style-index\"], () => (__webpack_require__(\"./src/related-podcasts/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["useBlockProps","InspectorControls","PanelBody","SelectControl","Button","TextControl","useSelect","__","jsx","_jsx","jsxs","_jsxs","Edit","attributes","setAttributes","title","description","selectedEpisodes","encodeId","id","btoa","episodeOptions","select","episodes","getEntityRecords","per_page","console","log","filter","episode","podcast","length","map","label","rendered","value","addEpisode","episodeId","includes","removeEpisode","className","children","initialOpen","onChange","newTitle","newDescription","options","find","isDestructive","onClick","registerBlockType","save","metadata","name","type","default","edit"],"sourceRoot":""}